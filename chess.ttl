@prefix : <http://localhost/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix schema: <https://schema.org/> .
@prefix wiki: <https://www.wikidata.org/wiki/>.
@prefix foaf: <http://xmlns.com/foaf/spec/#> .


# Main Graph

:Chess rdfs:comment "Describes the ontology of a game of chess."@en .
:ExampleBoard a :Board ;
	rdfs:comment "Describes an example board with only 6 squares."@en .
:ExampleSequence a :Sequence ;
	rdfs:comment "Describes an example sequence of two moves on the example board."@en .

:ExampleGame a :Game ;
	:whitePlayer [ a foaf:Person ; 
								foaf:name "Pierre" ;
								:color :White ] ;
	:blackPlayer [ a foaf:Person ;
								foaf:name "Michel" ;
								:color :Black ]  ;
	:moves :ExampleSequence .


# Chess Ontology

:Chess {

# ColoredElement Class
:ColoredElement a rdfs:Class ;
	rdfs:comment "The ColoredElement class contains colors that can be associated with squares, pieces or players."@en .

:color a rdfs:Property ;
	rdfs:comment "The color property allows you to assign a color to an element in the chess game (square, piece or player).The color can be black or white."@en ;
	rdfs:domain :ColoredElement ;
	rdfs:range :Color .


# Color Class
:Color a rdfs:Class ;
	rdfs:comment "The Color class represents the color of an element of the chess game (square, piece or player)."@en .
:White a :Color .
:Black a :Color .

# Piece Class
:Piece a rdfs:Class ;
	rdfs:comment "The Piece class represents the pieces available in the chess set. There are six pieces in the chess game which are (Knight, Pawn, Bishop, Rook, Queen, King)."@en ;
	rdfs:subClassOf :ColoredElement ; 
	schema:sameAs wiki:Q208440 ;
	rdfs:label  "Chess piece."@en .

:Knight a rdfs:Class ;
	rdfs:comment "The Knight class represents a piece of the chess game. Each player has two knights who are placed at b1 and g1 for white and b8 and g8 for black. The Knight can only move in L, i.e. 2 cases in one direction combined with one case perpendicularly."@en ;
	rdfs:subClassOf :Piece ; 
	schema:sameAs wiki:Q136 ;
	rdfs:label "Knight."@en .
:Pawn a rdfs:Class ;
	rdfs:comment "The Pawn class represents a type of piece in a chess game. Each player has eight pawns placed in the second row in front of the other pieces. From its initial position, the pawn can advance one or two squares. Then, the pawn can only advance one space. The pawn can only move forward and take a diagonal grip forward."@en ;
	rdfs:subClassOf :Piece ;
	schema:sameAs wiki:Q135 ;
	rdfs:label "Pawn."@en .
:Bishop a rdfs:Class ;
	rdfs:comment "The Bishop class represents a type of piece in chess games. The Bishop only moves diagonally."@en ;
	rdfs:subClassOf :Piece .
:Rook a rdfs:Class ;
	rdfs:comment "The Rook class represents a type of chess piece. Each player has two rounds placed at a1 and h1 for white and a8 and h8 for black. A rook can move horizontally or vertically."@en ;
	rdfs:subClassOf :Piece; 
	schema:sameAs wiki:Q137 ; 
	rdfs:label "Rook."@en .
:Queen a rdfs:Class;
	rdfs:comment "The Queen class represents a type of chess piece. Each player has a single queen placed at d1 for white and d8 for black. The queen can move vertically, horizontally or diagonally on any number of empty spaces."@en ;
	rdfs:subClassOf :Piece .
:King a rdfs:Class;
	rdfs:comment "The King class represents a type of chess piece. Each day has a single king placed at a1 for white and e8 for black. The object of the game is to protect your King. When the king is threatened with being caught in the next turn, it is a failure. However, if the king is unquestionably taken on the next turn, it is a checkmate. The King can only move one square in any direction."@en ;
	rdfs:subClassOf :Piece .

# Square Class
:Square a rdfs:Class ;
	rdfs:comment "The Square class represents a square of the chess game. Each box is alternated color between white and black."@en ;
	rdfs:subClassOf :ColoredElement .

:hasPiece a rdfs:Property ;
	rdfs:comment "The hasPiece property is used to indicate whether the box is video or contains a part."@en;
	rdfs:domain :Square ;
	rdfs:range :Piece .

:left a rdfs:Property ;
	rdfs:comment "The left property indicates the box to the left of a box."@en;
	rdfs:domain :Square ;
	rdfs:range :Square .

:right a rdfs:Property ;
	rdfs:comment "The right property indicates the box to the right of a box."@en;
	rdfs:domain :Square ;
	rdfs:range :Square .

:top a rdfs:Property ;
	rdfs:comment "The top property indicates the box to the top of a box."@en;
	rdfs:domain :Square ;
	rdfs:range :Square .

:bottom a rdfs:Property ;
	rdfs:comment "The bottom property indicates the box to the bottom of a box."@en;
	rdfs:domain :Square ;
	rdfs:range :Square .

:coordinates a rdfs:Property ;
	rdfs:comment "The coordinates property indicates the position of the box in the chess set. The first letter is a letter located from a to h and a second a number from 1 to 8."@en;
	rdfs:domain :Square ;
	rdfs:range xsd:string .

# Game Class
:Game a rdfs:Class ;
	rdfs:comment "The Game class represents a game of chess. Each game is played between two people who can be humans or computers. Each player takes turns playing with 16 pieces each. The object of the game is to take the king from the other player."@en .

:whitePlayer a rdfs:Property ;
	rdfs:comment "The whitePlayer property represents the player who plays with the white pieces"@en;
	rdfs:domain :Game ;
	rdfs:range :Player .

:blackPlayer a rdfs:Property ;
	rdfs:comment "The blackPlayer property represents the player who plays with the black pieces"@en;
	rdfs:domain :Game ;
	rdfs:range :Player .

:moves a rdfs:Property ;
	rdfs:comment "The moves property represents several sequences."@en;
	rdfs:domain :Game ;
	rdfs:range :Sequence .

# Player Class
:Player a rdfs:Class ;
	rdfs:comment "The Player class represents a player in the chess game. A player can be a human or a computer. Each player has a color (white or black) which defines which color of the piece he plays with."@en;
	rdfs:subClassOf foaf:Agent ;
	rdfs:subClassOf :ColoredElement .

# Sequence Class
:Sequence a rdfs:Class ;
	rdfs:comment "The Sequence class represents a sequence of motion."@en;
	rdfs:subClassOf rdf:List .

:startingBoard a rdfs:Property ;
	rdfs:comment "The startingBoard property represents a board with the starting positions of the parts."@en;
	rdfs:domain :Sequence ;
	rdfs:range :Board .

# Board Class

:Board a rdfs:Class ;
	rdfs:comment "The class Board represents the chessboard"@en.

# Move class
:Move a rdfs:Class ;
	rdfs:comment "The class Move represents the movement of a piece in the chess game."@en ;
	rdfs:subClassOf :ColoredElement .

:notation a rdfs:Property ;
	rdfs:comment "The rating property is a sequence of letters that designates the move in the chess standards."@en;
	rdfs:domain :Move ;
	rdfs:range xsd:string .

:check a rdfs:Property ;
	rdfs:comment "The check property is a boolean that indicates whether there is a check in the game."@en;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:checkmate a rdfs:Property ;
	rdfs:comment "The check property is a boolean which indicates if there is a checkmate in the game."@en;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castle a rdfs:Property ;
	rdfs:comment "The castle property is a boolean which indicates whether there has been a castle movement."@en;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castleQueenSide a rdfs:Property ;
	rdfs:comment "The castleQueenSide property is a boolean that indicates whether there is a castleQueenSide in the game. A castleQueenSide is a special move that moves a queen move and one of the towers. In one hit, the Queen and the tower are moved."@en;
	rdfs:subPropertyOf :castle .

:castleKingSide a rdfs:Property ;
	rdfs:comment "The castleKingSide property is a boolean that indicates whether there is a castleKingSide in the game. A castleKingSide is a special move that moves a king move and one of the rooks. In one hit, the king and the rook are moved."@en;
	rdfs:subPropertyOf :castle .

:pieceTaken a rdfs:Property ;
	rdfs:comment "The pieceTaken property represents the pieces that were taken during the game."@en;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:pieceTakenEnPassant a rdfs:Property ;
	rdfs:comment "The pieceTakenEnPassant property represents the pieces that were taken through a pawns."@en;
	rdfs:subPropertyOf :pieceTaken .

:pawnPromotion a rdfs:Property ;
	rdfs:comment "The pawnPromotion property represents when a pawn arrives from the other side and is replaced by another piece from the game."@en;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:piece a rdfs:Property ;
	rdfs:comment "The piece property represents the piece that has moved in the game."@en;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:destinationSquare a rdfs:Property ;
	rdfs:comment "The destinationSquare property represents the final square of the part that has to move."@en;
	rdfs:domain :Move ;
	rdfs:range :Square .

}

# Example Board

:ExampleBoard {

_:a1 a :Square ;
	:color :Black ;
	:hasPiece _:KW ;
	:coordinates "a1" ;
	:right _:b1 ;
	:top _:a2 .

_:KW a :King ;
	:color :White .

_:b1 a :Square ;
	:color :White ;
	:coordinates "b1" ;
	:left _:a1 ;
	:right _:c1 ;
	:top _:b2 .

_:c1 a :Square ;
	:color :Black ;
	:hasPiece _:NB ;
	:coordinates "c1" ;
	:left _:b1 .

_:NB a :Knight ;
	:color :Black .
	
_:a2 a :Square ;
	:color :White ;
	:coordinates "a2" ;
	:bottom _:a1 ;
	:right _:b2 .

_:a3 a :Square ;
	:color :Black ;
	:hasPiece _:QB ;
	:coordinates "a3" ;
	:bottom _:a2 .

_:QB a :Queen ;
	:color :Black .

_:b2 a :Square ;
	:color :Black ;
	:hasPiece _:RW ;
	:coordinates "b2" ;
	:left _:a2 ;
	:bottom _:b1 .

_:RW a :Rook ;
	:color :White .

}

# Example Sequence

:ExampleSequence {

_:m1 a :Sequence ;
	:startingBoard :ExampleBoard ;
	rdf:first [ a :Move ;
							:color :White ;
							:piece _:RW ;
							:destinationSquare _:a2 ] ;
	rdf:rest _:m2 .

_:m2 a :Sequence ;
	rdf:first [ a :Move ;
							:color :Black ;
							:piece _:QB ;
							:destinationSquare _:a2 ;
							:pieceTaken _:KW ;
							:checkmate true ] ;
	rdf:rest rdf:nil .

}
