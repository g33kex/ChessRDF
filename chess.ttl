@prefix : <http://localhost#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix schema: <https://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/spec/#> .

:Chess rdfs:comment "Describes the ontology of a game of chess."@en .
:StartingBoard rdfs:comment "Describes a board with pieces at starting positions."@en .

:Chess {

# ColoredElement Class
:ColoredElement a rdfs:Class .

:color a rdfs:Property ;
	rdfs:domain :ColoredElement ;
	rdfs:range :Color .


# Color Class
:Color a rdfs:Class .
:White a :Color .
:Black a :Color .

# Piece Class
:Piece a rdfs:Class ;
	rdfs:subClassOf :ColoredElement .

:possibleMoves a rdfs:Property ;
	rdfs:domain :Piece ;
	rdfs:range xsd:string .

:Knight a rdfs:Class ;
	rdfs:subClassOf :Piece .
:Pawn a rdfs:Class ;
	rdfs:subClassOf :Piece .
:Bishop a rdfs:Class ;
	rdfs:subClassOf :Piece .
:Rook a rdfs:Class ;
	rdfs:subClassOf :Piece .
:Queen a rdfs:Class;
	rdfs:subClassOf :Piece .
:King a rdfs:Class;
	rdfs:subClassOf :Piece .

# Square Class
:Square a rdfs:Class ;
	rdfs:subClassOf :ColoredElement .

:hasPiece a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Piece .

:left a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:right a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:top a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:bottom a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:coordinates a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range xsd:string .

# Game Class
:Game a rdfs:Class .

:whitePlayer a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Player .

:blackPlayer a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Player .

:moves a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :ListOfMoves .

:winner a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Player .

:draw a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range xsd:boolean .

# Player Class
:Player a rdfs:Class ;
	rdfs:subClassOf foaf:Agent ;
	rdfs:subClassOf :ColoredElement .

# ListOfMoves class
:ListOfMoves a rdfs:Class ;
	rdfs:subClassOf rdf:List .

# Move class
:Move a rdfs:Class ;
	rdfs:subClassOf :ColoredElement .

:notation a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:string .

:check a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:checkmate a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castle a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castleQueenSide a rdfs:Property ;
	rdfs:subPropertyOf :castle .

:castleKingSide a rdfs:Property ;
	rdfs:subPropertyOf :castle .

:pieceTaken a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:pieceTakenEnPassant a rdfs:Property ;
	rdfs:subPropertyOf :pieceTaken .

:pawnPromotion a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:piece a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:destinationSquare a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Square .

}

# Starting Board

:StartingBoard {

_:a1 a :Square ;
	:color :Black ;
	:hasPiece [ a :Rook ; :color :White ] ;
	:coordinates "a1" ;
	:right _:b1 .

_:b1 a :Square ;
	:color :White ;
	:hasPiece [ a :Knight; :color :White ] ;
	:coordinates "b1" ;
	:left _:a1 ;
	:right _:c1 .

_:c1 a :Square ;
	:color :Black ;
	:hasPiece [ a :Bishop; :color :White ] ;
	:coordinates "c1" ;
	:left _:b1 ;
	:right _:d1 .
	
_:d1 a :Square ;
	:color :White ;
	:hasPiece [ a :Queen; :color :White ] ;
	:coordinates "d1" ;
	:left _:c1 ;
	:right _:e1 .

_:e1 a :Square ;
	:color :Black ;
	:hasPiece [ a :King; :color :White ];
	:coordinates "e1" ;
	:left _:d1 .

}
