@prefix : <http://localhost/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix schema: <https://schema.org/> .
@prefix wiki: <https://www.wikidata.org/wiki/>.
@prefix foaf: <http://xmlns.com/foaf/spec/#> .


# Main Graph

:Chess rdfs:comment "Describes the ontology of a game of chess."@en .
:ExampleBoard a :Board ;
	rdfs:comment "Describes an example board with only 6 squares."@en .
:ExampleSequence a :Sequence ;
	rdfs:comment "Describes an example sequence of two moves on the example board."@en .

:ExampleGame a :Game ;
	:whitePlayer [ a foaf:Person ; 
								foaf:name "Pierre" ;
								:color :White ] ;
	:blackPlayer [ a foaf:Person ;
								foaf:name "Michel" ;
								:color :Black ]  ;
	:moves :ExampleSequence .


# Chess Ontology

:Chess {

# ColoredElement Class
:ColoredElement a rdfs:Class .

:color a rdfs:Property ;
	rdfs:domain :ColoredElement ;
	rdfs:range :Color .


# Color Class
:Color a rdfs:Class .
:White a :Color .
:Black a :Color .

# Piece Class
:Piece a rdfs:Class ;
	rdfs:subClassOf :ColoredElement ; 
	schema:sameAs wiki:Q208440 ;
	rdfs:label  "Chess piece."@en .

:Knight a rdfs:Class ;
	rdfs:subClassOf :Piece ; 
	schema:sameAs wiki:Q136 ;
	rdfs:label "Knight."@en .
:Pawn a rdfs:Class ;
	rdfs:subClassOf :Piece ;
	schema:sameAs wiki:Q135 ;
	rdfs:label "Pawn."@en .
:Bishop a rdfs:Class ;
	rdfs:subClassOf :Piece .
:Rook a rdfs:Class ;
	rdfs:subClassOf :Piece; 
	schema:sameAs wiki:Q137 ; 
	rdfs:label "Rook."@en .
:Queen a rdfs:Class;
	rdfs:subClassOf :Piece .
:King a rdfs:Class;
	rdfs:subClassOf :Piece .

# Square Class
:Square a rdfs:Class ;
	rdfs:subClassOf :ColoredElement .

:hasPiece a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Piece .

:left a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:right a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:top a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:bottom a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range :Square .

:coordinates a rdfs:Property ;
	rdfs:domain :Square ;
	rdfs:range xsd:string .

# Game Class
:Game a rdfs:Class .

:whitePlayer a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Player .

:blackPlayer a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Player .

:moves a rdfs:Property ;
	rdfs:domain :Game ;
	rdfs:range :Sequence .

# Player Class
:Player a rdfs:Class ;
	rdfs:subClassOf foaf:Agent ;
	rdfs:subClassOf :ColoredElement .

# Sequence Class
:Sequence a rdfs:Class ;
	rdfs:subClassOf rdf:List .

:startingBoard a rdfs:Property ;
	rdfs:domain :Sequence ;
	rdfs:range :Board .

# Board Class

:Board a rdfs:Class .

# Move class
:Move a rdfs:Class ;
	rdfs:subClassOf :ColoredElement .

:notation a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:string .

:check a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:checkmate a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castle a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range xsd:boolean .

:castleQueenSide a rdfs:Property ;
	rdfs:subPropertyOf :castle .

:castleKingSide a rdfs:Property ;
	rdfs:subPropertyOf :castle .

:pieceTaken a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:pieceTakenEnPassant a rdfs:Property ;
	rdfs:subPropertyOf :pieceTaken .

:pawnPromotion a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:piece a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Piece .

:destinationSquare a rdfs:Property ;
	rdfs:domain :Move ;
	rdfs:range :Square .

}

# Example Board

:ExampleBoard {

_:a1 a :Square ;
	:color :Black ;
	:hasPiece _:KW ;
	:coordinates "a1" ;
	:right _:b1 ;
	:top _:a2 .

_:KW a :King ;
	:color :White .

_:b1 a :Square ;
	:color :White ;
	:coordinates "b1" ;
	:left _:a1 ;
	:right _:c1 ;
	:top _:b2 .

_:c1 a :Square ;
	:color :Black ;
	:hasPiece _:NB ;
	:coordinates "c1" ;
	:left _:b1 .

_:NB a :Knight ;
	:color :Black .
	
_:a2 a :Square ;
	:color :White ;
	:coordinates "a2" ;
	:bottom _:a1 ;
	:right _:b2 .

_:a3 a :Square ;
	:color :Black ;
	:hasPiece _:QB ;
	:coordinates "a3" ;
	:bottom _:a2 .

_:QB a :Queen ;
	:color :Black .

_:b2 a :Square ;
	:color :Black ;
	:hasPiece _:RW ;
	:coordinates "b2" ;
	:left _:a2 ;
	:bottom _:b1 .

_:RW a :Rook ;
	:color :White .

}

# Example Sequence

:ExampleSequence {

_:m1 a :Sequence ;
	:startingBoard :ExampleBoard ;
	rdf:first [ a :Move ;
							:color :White ;
							:piece _:RW ;
							:destinationSquare _:a2 ] ;
	rdf:rest _:m2 .

_:m2 a :Sequence ;
	rdf:first [ a :Move ;
							:color :Black ;
							:piece _:QB ;
							:destinationSquare _:a2 ;
							:pieceTaken _:KW ;
							:checkmate true ] ;
	rdf:rest rdf:nil .

}

